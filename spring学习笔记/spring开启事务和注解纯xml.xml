<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd  http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-2.5.xsd http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-2.5.xsd  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
  <aop:aspectj-autoproxy/>
  <!-- 配置数据源 -->
  <bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSource">
    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <property name="url" value="jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf-8"/>
    <property name="username" value="root"/>
    <property name="password" value=""/>
    <!-- 连接池启动时的初始值 -->
    <property name="initialSize" value="1"/>
    <!-- 连接池的最大值 -->
    <property name="maxActive" value="500"/>
    <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
    <property name="maxIdle" value="2"/>
    <!--  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
    <property name="minIdle" value="1"/>
  </bean>
  <!-- 配置事务管理器 -->
  <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="txManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>
  <!-- 配置业务bean -->
  <bean class="com.persia.service.impl.PersonServiceImpl" id="personService">
    <property name="ds" ref="dataSource"/>
  </bean>
  <!-- 使用XML来使用事务管理-->
  <aop:config>
    <!-- 配置一个切面，和需要拦截的类和方法 -->
    <aop:pointcut expression="execution(* com.persia.service..*.*(..))" id="transactionPointcut"/>
    <aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointcut"/>
  </aop:config>
  <!-- 配置一个事务通知 -->
  <tx:advice id="txAdvice" transaction-manager="txManager">
    <tx:attributes>
      <!-- 方法以get开头的，不使用事务 -->
      <tx:method name="get*" propagation="NOT_SUPPORTED" read-only="true"/>
      <!-- 其他方法以默认事务进行 -->
      <tx:method name="*"/>
    </tx:attributes>
  </tx:advice>
</beans>